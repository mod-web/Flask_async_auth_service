version: '3.4'
services:

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - flaskapp
    ports:
      - 80:80

  postgres:
    image: postgres:alpine
    restart: always
    volumes:
      - postgres_auth_data:/var/lib/postgresql/auth_data
    environment:
      POSTGRES_DB: ${AUTH_DB__NAME}
      POSTGRES_USER: ${AUTH_DB__USER}
      POSTGRES_PASSWORD: ${AUTH_DB__PASSWORD}
    env_file:
      - ./.env

  redis:
    image: redis:7.0.9-alpine
    restart: always
    volumes:
      - redis_token_data:/opt/redis/token_data

  flaskapp:
    build: flask_app
    restart: on-failure
    env_file:
      - ./.env
    volumes:
      - ./flask_app/migrations:/opt/app/migrations
    depends_on:
      - postgres
      - redis


volumes:
  postgres_auth_data:
  redis_token_data:
